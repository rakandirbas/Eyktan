package com.rakblog.action;

import java.io.IOException;

import net.sourceforge.stripes.action.DefaultHandler;
import net.sourceforge.stripes.action.ForwardResolution;
import net.sourceforge.stripes.action.RedirectResolution;
import net.sourceforge.stripes.action.Resolution;

import org.apache.lucene.queryParser.ParseException;

import com.rakblog.utils.Searcher;

public class ResultsActionBean extends BaseActionBean {
	
	private final String VIEW = "/WEB-INF/jsp/results.jsp";
	private String query;
	private Searcher searcher;
	private Searcher.SearchResult searchResult;
	private int pageNumber = 1;
	
	@DefaultHandler
	public Resolution showResults() {
		String q;
		try {
			searcher = new Searcher();
			
			if ( getQuery() == null )
				setQuery( "" );
			//System.out.println( "HAHHAHA********************#" + getQuery() );
			searchResult = searcher.search( getQuery(), getPageNumber() );
			searcher.close();
		} catch (ParseException e) {
			e.printStackTrace();
		} catch (IOException e) {
			e.printStackTrace();
		}
		return new ForwardResolution( VIEW );
	}
	
	public Resolution search() {
		
		return new RedirectResolution( ResultsActionBean.class ).addParameter("query", getQuery());
	}

	public String getQuery() {
		return query;
	}

	public void setQuery(String query) {
		
		this.query = query;
	}
	
	public Searcher.SearchResult getSearchResult() {
		return searchResult;
	}

	public int getPageNumber() {
		return pageNumber;
	}

	public void setPageNumber(int pageNumber) {
		this.pageNumber = pageNumber > 0 ? pageNumber : 1;
	}
	
	public int getPageRange1() {
		int range = 0;
		
		if ( getPagesNumber() == -1 ) 
			return 0;
		
		if ( getPageNumber() > 0 & getPageNumber() <= 5 )
			range = 1;
		else if ( getPageNumber() > 5 & getPageNumber() <= 10 )
			range = 5;
		else if ( getPageNumber() > 10 & getPageNumber() <= 15 )
			range = 5;
		else if ( getPageNumber() > 15 & getPageNumber() <= 20 )
			range = 10;
		else if ( getPageNumber() > 20 & getPageNumber() <= 25 )
			range = 15;
		else if ( getPageNumber() > 25 & getPageNumber() <= 30 )
			range = 20;
		else if ( getPageNumber() > 30 & getPageNumber() <= 35 )
			range = 25;
		else if ( getPageNumber() > 35 & getPageNumber() <= 40 )
			range = 30;
		else if ( getPageNumber() > 40 & getPageNumber() <= 45 )
			range = 35;
		else if ( getPageNumber() > 45 & getPageNumber() <= 50 )
			range = 40;
		else if ( getPageNumber() > 50 & getPageNumber() <= 55 )
			range = 45;
		else if ( getPageNumber() > 55 & getPageNumber() <= 60 )
			range = 50;
		else if ( getPageNumber() > 60 & getPageNumber() <= 65 )
			range = 55;
		else if ( getPageNumber() > 65 & getPageNumber() <= 70 )
			range = 60;
		else if ( getPageNumber() > 70 & getPageNumber() <= 75 )
			range = 65;
		else if ( getPageNumber() > 75 & getPageNumber() <= 80 )
			range = 70;
		else if ( getPageNumber() > 80 & getPageNumber() <= 85 )
			range = 75;
		else if ( getPageNumber() > 85 & getPageNumber() <= 90 )
			range = 80;
		else if ( getPageNumber() > 90 & getPageNumber() <= 95 )
			range = 85;
		else if ( getPageNumber() > 95 & getPageNumber() <= 100 )
			range = 90;
		
		
		return range;
	}
	
	public int getPageRange2() {
		int range = 0;
		
		if ( getPagesNumber() == -1 ) 
			return 0;
		
		if ( getPageNumber() > 0 & getPageNumber() < 5 )
			range = 10;
		else if ( getPageNumber() >= 5 & getPageNumber() < 10 )
			range = 15;
		else if ( getPageNumber() >= 10 & getPageNumber() < 15 )
			range = 15;
		else if ( getPageNumber() >= 15 & getPageNumber() < 20 )
			range = 20;
		else if ( getPageNumber() >= 20 & getPageNumber() < 25 )
			range = 25;
		else if ( getPageNumber() >= 25 & getPageNumber() < 30 )
			range = 30;
		else if ( getPageNumber() >= 30 & getPageNumber() < 35 )
			range = 35;
		else if ( getPageNumber() >= 35 & getPageNumber() < 40 )
			range = 40;
		else if ( getPageNumber() >= 40 & getPageNumber() < 45 )
			range = 45;
		else if ( getPageNumber() >= 45 & getPageNumber() < 50 )
			range = 50;
		else if ( getPageNumber() >= 50 & getPageNumber() < 55 )
			range = 55;
		else if ( getPageNumber() >= 55 & getPageNumber() < 60 )
			range = 60;
		else if ( getPageNumber() >= 60 & getPageNumber() < 65 )
			range = 65;
		else if ( getPageNumber() >= 65 & getPageNumber() < 70 )
			range = 70;
		else if ( getPageNumber() >= 70 & getPageNumber() < 75 )
			range = 75;
		else if ( getPageNumber() >= 75 & getPageNumber() < 80 )
			range = 80;
		else if ( getPageNumber() >= 80 & getPageNumber() < 85 )
			range = 85;
		else if ( getPageNumber() >= 85 & getPageNumber() < 90 )
			range = 90;
		else if ( getPageNumber() >= 90 & getPageNumber() < 95 )
			range = 95;
		else if ( getPageNumber() >= 95 & getPageNumber() < 100 )
			range = 100;
		
		if ( range > getPagesNumber() )
			range = getPagesNumber();
		
		return range;
	}
	
	public int getPagesNumber() {
		
		int numberOfResults;
		int numberOfPages;
		
		if ( getSearchResult() == null ) 
			return -1;
		else
			numberOfResults = getSearchResult().getTotalHits();
		
		if ( numberOfResults % 10 == 0 ) {
			numberOfPages = numberOfResults / 10;
		}
		else {
			numberOfPages = numberOfResults / 10;
			numberOfPages++;
		}
		
		return numberOfPages;
		
	}

}
